<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QuantConnect.DataSource</name>
    </assembly>
    <members>
        <member name="T:QuantConnect.DataSource.NasdaqBitfinexDownloader">
            <summary>
            Nasdaq Bitfinex Data Downloader class
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqBitfinexDownloader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:QuantConnect.DataSource.NasdaqBitfinexDownloader"/> class
            </summary>
            <param name="apiKey">The nasdaq api key</param>
            <param name="scaleFactor">Scale factor used to scale the data, useful for changing the BTC units</param>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqBitfinexDownloader.Get(QuantConnect.DataDownloaderGetParameters)">
            <summary>
            Get historical data enumerable for Bitfinex from Nasdaq
            </summary>
            <param name="dataDownloaderGetParameters">model class for passing in parameters for historical data</param>
            <returns>Enumerable of base data for this symbol</returns>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqBitfinexDownloaderProgram.NasdaqBitfinexDownloader(System.DateTime,System.String)">
            <summary>
            Nasdaq Bitfinex Toolbox Project For LEAN Algorithmic Trading Engine.
            </summary>
        </member>
        <member name="T:QuantConnect.DataSource.NasdaqDataLink">
            <summary>
            Nasdaq Data Link dataset
            </summary>
        </member>
        <member name="P:QuantConnect.DataSource.NasdaqDataLink.ValueColumnName">
            <summary>
            Name of the column is going to be used for the field Value
            </summary>
            <remarks>This field will be set in the Python class constructor
            which inherits from PythonNasdaq. It was made to allow the user to
            set a specified column to be used as a value when working in Python.</remarks>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.#cctor">
            <summary>
            Static constructor for the <see cref="T:QuantConnect.DataSource.NasdaqDataLink"/> class
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.#ctor">
            <summary>
            Default <see cref="T:QuantConnect.DataSource.NasdaqDataLink"/> constructor uses Close as its value column
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.#ctor(System.String)">
            <summary>
            Constructor for creating customized <see cref="T:QuantConnect.DataSource.NasdaqDataLink"/> instance which doesn't use close, price, settle or value as its value item.
            </summary>
            <param name="valueColumnName">The name of the column we want to use as reference, the Value property</param>
        </member>
        <member name="P:QuantConnect.DataSource.NasdaqDataLink.IsAuthCodeSet">
            <summary>
            Flag indicating whether or not the Nasdaq Data Link auth code has been set yet
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.GetSource(QuantConnect.Data.SubscriptionDataConfig,System.DateTime,System.Boolean)">
            <summary>
            Using the Nasdaq Data Link V3 API automatically set the URL for the dataset.
            </summary>
            <param name="config">Subscription configuration object</param>
            <param name="date">Date of the data file we're looking for</param>
            <param name="isLiveMode">true if we're in live mode, false for backtesting mode</param>
            <returns>STRING API Url for Nasdaq Data Link.</returns>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.Reader(QuantConnect.Data.SubscriptionDataConfig,System.String,System.DateTime,System.Boolean)">
            <summary>
            Parses the data from the line provided and loads it into LEAN
            </summary>
            <param name="config">Subscription configuration</param>
            <param name="line">CSV line of data from the souce</param>
            <param name="date">Date of the requested line</param>
            <param name="isLiveMode">Is live mode</param>
            <returns>New instance</returns>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.SetAuthCode(System.String)">
            <summary>
            Set the auth code for the Nasdaq Data Link set to the QuantConnect auth code.
            </summary>
            <param name="authCode"></param>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.IsSparseData">
            <summary>
            Indicates whether the data is sparse.
            If true, we disable logging for missing files
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.DefaultResolution">
            <summary>
            Gets the default resolution for this data and security type
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.SupportedResolutions">
            <summary>
            Gets the supported resolution for this data and security type
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.DataTimeZone">
            <summary>
            Specifies the data time zone for this data type. This is useful for custom data types
            </summary>
            <returns>The <see cref="T:NodaTime.DateTimeZone" /> of this data type</returns>
        </member>
        <member name="P:QuantConnect.DataSource.NasdaqDataLink.EndTime">
            <summary>
            The end time of this data. Some data covers spans (trade bars) and as such we want
            to know the entire time span covered
            </summary>
        </member>
        <member name="P:QuantConnect.DataSource.NasdaqDataLink.Period">
            <summary>
            Gets a time span of one day
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.NasdaqDataLink.SetValueColumnName(System.String)">
            <summary>
            Inserts the name of the column at first position in _keywords list
            </summary>
            <param name="valueColumnName">Name of the column to be used as Value</param>
        </member>
        <member name="T:QuantConnect.DataSource.PythonNasdaq">
            <summary>
            Dynamic data class for Python algorithms.
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.PythonNasdaq.#ctor">
            <summary>
            Constructor for initialising the PythonNasdaq class
            </summary>
        </member>
        <member name="T:QuantConnect.DataSource.PythonQuandl">
            <summary>
            Dynamic data class for Python algorithms.
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.PythonQuandl.#ctor">
            <summary>
            Constructor for initialising the PythonQuandl class
            </summary>
        </member>
        <member name="T:QuantConnect.DataSource.Quandl">
            <summary>
            Quandl Data Type (Deprecated, Use NasdaqDataLink instead.)
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.Quandl.#ctor">
            <summary>
            Default <see cref="T:QuantConnect.DataSource.Quandl"/> constructor uses Close as its value column
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.Quandl.#ctor(System.String)">
            <summary>
            Constructor for creating customized <see cref="T:QuantConnect.DataSource.Quandl"/> instance which doesn't use close, price, settle or value as its value item.
            </summary>
            <param name="valueColumnName">The name of the column we want to use as reference, the Value property</param>
        </member>
        <member name="T:QuantConnect.DataSource.QuandlBitfinexDownloader">
            <summary>
            Quandl Bitfinex Data Downloader class
            </summary>
        </member>
        <member name="M:QuantConnect.DataSource.QuandlBitfinexDownloader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:QuantConnect.DataSource.QuandlBitfinexDownloader"/> class
            </summary>
            <param name="apiKey">The quandl api key</param>
            <param name="scaleFactor">Scale factor used to scale the data, useful for changing the BTC units</param>
        </member>
        <member name="M:QuantConnect.DataSource.QuandlBitfinexDownloaderProgram.QuandlBitfinexDownloader(System.DateTime,System.String)">
            <summary>
            Quandl Bitfinex Toolbox Project For LEAN Algorithmic Trading Engine.
            </summary>
        </member>
    </members>
</doc>
